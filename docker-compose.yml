services:
  backend:
    build:
      context: .
      target: backend
      args:
        - NODE_ENV=production
    container_name: ghmd-editor-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=${BACKEND_PORT}
      - LOG_LEVEL=info
      
    volumes:
      # Optional: persist schemas cache
      - schemas_cache:/app/schemas_cache
    networks:
      - ghmd-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      target: frontend
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
        - VITE_APP_TITLE=${VITE_APP_TITLE}
    container_name: ghmd-editor-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      # Runtime environment variables for nginx
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_PORT=${NGINX_PORT}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ghmd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  ghmd-network:
    driver: bridge

volumes:
  schemas_cache:
    driver: local